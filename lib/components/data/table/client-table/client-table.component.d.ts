import { OnInit, OnDestroy, EventEmitter } from '@angular/core';
import { PilTablePage } from '../../../../models/';
import { TablePageService } from '../../../../services/table-page.service';
export declare class ClientTableComponent implements OnInit, OnDestroy {
    private _tablePageSvc;
    actionColumn: boolean;
    actionTitle: string;
    actionInValidation: boolean;
    checkboxColumn: boolean;
    footerInfo: boolean;
    footerOptions: boolean;
    limitOptions: boolean;
    paginationOptions: boolean;
    radioColumn: boolean;
    searchOptions: boolean;
    columns: any;
    rows: any;
    editClicked: EventEmitter<{}>;
    deleteClicked: EventEmitter<{}>;
    detailClicked: EventEmitter<{}>;
    inValidateClicked: EventEmitter<{}>;
    pageChanged: EventEmitter<{}>;
    printClicked: EventEmitter<{}>;
    publishClicked: EventEmitter<{}>;
    radioSelect: EventEmitter<{}>;
    reloadClicked: EventEmitter<{}>;
    selectedRows: EventEmitter<{}>;
    switchChanged: EventEmitter<{}>;
    validateClicked: EventEmitter<{}>;
    verifyClicked: EventEmitter<{}>;
    limitChanged: EventEmitter<{}>;
    inputTextValueChange: EventEmitter<{}>;
    inputRadioValueChange: EventEmitter<{}>;
    page: PilTablePage;
    _isAllRowsSelected: boolean;
    sortTimerInterval: any;
    _columns: Array<any>;
    _rows: Array<any>;
    _rowsCollection: Array<any>;
    _rowsTemp: Array<any>;
    _selectedRows: Array<any>;
    previousRadioItem: any[];
    constructor(_tablePageSvc: TablePageService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    getDataOfCurrentPage(colleciton: any): any;
    getEndPage(page: PilTablePage): number;
    getStartPage(page: PilTablePage): number;
    mapActions(prop: any): void;
    onLimitChange(limit: number): void;
    onInputRadioChange(rowIndex: any, prop: string): void;
    onInputTextChange(index: number, column: string): void;
    onPageChange($event: any): void;
    onRadioSelect(data: any): void;
    onRowSelect(type: string, $event: any, data?: any): void;
    onRowSelectMobile($event: any): void;
    onSearchChange(keyword: string): void;
    setColumnSortDirection(column: any, index: number): void;
    setRowElementAuthStatus(auth: any): boolean;
    sortTableColumn(column: any, index: number): void;
    sortTableColumnMobile(column: any): void;
    sortColumValue(data: any): (currentValue: any, nextValue: any) => number;
}
